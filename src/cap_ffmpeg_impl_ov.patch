--- cap_ffmpeg_impl.hpp	2019-10-05 10:32:57.888980455 +0200
+++ cap_ffmpeg_impl_ov.hpp	2019-10-24 22:06:14.736483023 +0200
@@ -40,14 +40,24 @@
 //
 //M*/
 
-#include "cap_ffmpeg_api.hpp"
-#if !(defined(_WIN32) || defined(WINCE))
-# include <pthread.h>
-#endif
+/* ATTENTION:
+ *
+ * This file was generated from
+ *
+ * https://github.com/opencv/opencv/blob/master/modules/videoio/src/cap_ffmpeg_impl.hpp
+ * commit 9702987209a9a17ee2d0626c535d2b7bbc6ba1bc
+ *
+ * and applying the patches in cap_ffmpeg_impl_ov.patch
+ */
+
 #include <assert.h>
 #include <algorithm>
 #include <limits>
 
+#include <string>
+#include <octave/oct.h>
+#undef USE_AV_INTERRUPT_CALLBACK
+
 #ifndef __OPENCV_BUILD
 #define CV_FOURCC(c1, c2, c3, c4) (((c1) & 255) + (((c2) & 255) << 8) + (((c3) & 255) << 16) + (((c4) & 255) << 24))
 #endif
@@ -472,9 +482,13 @@
 #endif
 }
 
+static bool capture_type_loaded = false;
 
-struct CvCapture_FFMPEG
+class CvCapture_FFMPEG: public octave_base_value
 {
+  public:
+    CvCapture_FFMPEG ();
+
     bool open( const char* filename );
     void close();
 
@@ -528,10 +542,38 @@
 #if USE_AV_INTERRUPT_CALLBACK
     AVInterruptCallbackMetadata interrupt_metadata;
 #endif
+
+  bool is_constant (void) const
+  {
+    return true;
+  }
+  bool is_defined (void) const
+  {
+    return true;
+  }
+
+  DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
+
+  void print (std::ostream & os, bool pr_as_read_syntax = false)
+  {
+    os << "CvCapture_FFMPEG:" << std::endl;
+    if (filename)
+      os << "  filename           = " << filename << std::endl;
+    os << "  get_total_frames() = " << get_total_frames() << std::endl;
+    os << "  get_duration_sec() = " << get_duration_sec() << std::endl;
+    os << "  get_fps()          = " << get_fps() << std::endl;
+    os << "  get_bitrate()      = " << get_bitrate() << std::endl;
+  }
 };
 
+DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA(CvCapture_FFMPEG, "CvCapture_FFMPEG", "CvCapture_FFMPEG");
+
+CvCapture_FFMPEG::CvCapture_FFMPEG ()
+  : octave_base_value () { init (); };
+
 void CvCapture_FFMPEG::init()
 {
+    av_register_all();
     ic = 0;
     video_stream = -1;
     video_st = 0;
@@ -891,6 +933,15 @@
     int err = av_open_input_file(&ic, _filename, NULL, 0, NULL);
 #endif
 
+//fprintf(stderr, "err = %i %s %i %i\n", err, icvFFMPEGErrStr(err), LIBAVUTIL_BUILD, CALC_FFMPEG_VERSION(52, 111, 0));
+
+/*
+ * FIXME: communicate error message with GNU octave
+char buf[50];
+av_strerror (err, buf, 50);
+fprintf (stderr, "%s\n", buf);
+*/
+
     if (err < 0)
     {
         CV_WARN("Error opening file");
@@ -1159,6 +1210,8 @@
     AVCodecID codec_id = AV_CODEC_ID_NONE;
     const char* codec_fourcc = NULL;
 
+#if 0
+
     switch( property_id )
     {
     case CV_FFMPEG_CAP_PROP_POS_MSEC:
@@ -1203,7 +1256,7 @@
     default:
         break;
     }
-
+#endif
     return 0;
 }
 
@@ -1344,7 +1397,7 @@
 bool CvCapture_FFMPEG::setProperty( int property_id, double value )
 {
     if( !video_st ) return false;
-
+#if 0
     switch( property_id )
     {
     case CV_FFMPEG_CAP_PROP_POS_MSEC:
@@ -1372,14 +1425,19 @@
     default:
         return false;
     }
-
+#endif
     return true;
 }
 
 
 ///////////////// FFMPEG CvVideoWriter implementation //////////////////////////
-struct CvVideoWriter_FFMPEG
+static bool writer_type_loaded = false;
+
+class CvVideoWriter_FFMPEG: public octave_base_value
 {
+  public:
+    CvVideoWriter_FFMPEG ();
+
     bool open( const char* filename, int fourcc,
                double fps, int width, int height, bool isColor );
     void close();
@@ -1403,8 +1461,24 @@
     int               frame_idx;
     bool              ok;
     struct SwsContext *img_convert_ctx;
+
+    bool is_constant (void) const
+    {
+      return true;
+    }
+    bool is_defined (void) const
+    {
+      return true;
+    }
+
+    DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
+DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA(CvVideoWriter_FFMPEG, "CvVideoWriter_FFMPEG", "CvVideoWriter_FFMPEG");
+
+CvVideoWriter_FFMPEG::CvVideoWriter_FFMPEG ()
+  : octave_base_value () { init (); };
+
 static const char * icvFFMPEGErrStr(int err)
 {
 #if LIBAVFORMAT_BUILD >= CALC_FFMPEG_VERSION(53, 2, 0)
@@ -1465,6 +1539,7 @@
 
 void CvVideoWriter_FFMPEG::init()
 {
+    av_register_all();
     fmt = 0;
     oc = 0;
     outbuf = 0;
